{"ast":null,"code":"import _defineProperty from\"C:/Users/ahsan/Documents/Capstone/Frontend-Capstone/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/ahsan/Documents/Capstone/Frontend-Capstone/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/ahsan/Documents/Capstone/Frontend-Capstone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Signup=function Signup(){var _React$useState=React.useState({email:\"\",password:\"\",passwordConfirm:\"\",joinedNewsletter:true}),_React$useState2=_slicedToArray(_React$useState,2),formData=_React$useState2[0],setFormData=_React$useState2[1];/**\r\n     * Challenge: Connect the form to local state\r\n     * \r\n     * 1. Create a state object to store the 4 values we need to save.\r\n     * 2. Create a single handleChange function that can\r\n     *    manage the state of all the inputs and set it up\r\n     *    correctly\r\n     * 3. When the user clicks \"Sign up\", check if the \r\n     *    password & confirmation match each other. If\r\n     *    so, log \"Successfully signed up\" to the console.\r\n     *    If not, log \"passwords do not match\" to the console.\r\n     * 4. Also when submitting the form, if the person checked\r\n     *    the \"newsletter\" checkbox, log \"Thanks for signing\r\n     *    up for our newsletter!\" to the console.\r\n     */function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value,type=_event$target.type,checked=_event$target.checked;setFormData(function(prevFormData){return _objectSpread(_objectSpread({},prevFormData),{},_defineProperty({},name,type===\"checkbox\"?checked:value));});}function handleSubmit(event){event.preventDefault();if(formData.password===formData.passwordConfirm){alert(\"Successfully signed up\");}else{alert(\"Passwords do not match\");return;}if(formData.joinedNewsletter){console.log(\"Thanks for signing up for our newsletter!\");}}return/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email address\",className:\"form--input\",name:\"email\",onChange:handleChange,value:formData.email}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",className:\"form--input\",name:\"password\",onChange:handleChange,value:formData.password}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm password\",className:\"form--input\",name:\"passwordConfirm\",onChange:handleChange,value:formData.passwordConfirm}),/*#__PURE__*/_jsxs(\"div\",{className:\"form--marketing\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"okayToEmail\",type:\"checkbox\",name:\"joinedNewsletter\",onChange:handleChange,checked:formData.joinedNewsletter}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"okayToEmail\",children:\"I want to join the newsletter\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"form--submit\",children:\"Sign up\"})]})});};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Signup","_React$useState","useState","email","password","passwordConfirm","joinedNewsletter","_React$useState2","_slicedToArray","formData","setFormData","handleChange","event","_event$target","target","name","value","type","checked","prevFormData","_objectSpread","_defineProperty","handleSubmit","preventDefault","alert","console","log","className","children","onSubmit","placeholder","onChange","id","htmlFor"],"sources":["C:/Users/ahsan/Documents/Capstone/Frontend-Capstone/src/components/Signup.jsx"],"sourcesContent":["import React from \"react\"\r\n\r\n export const Signup=()=> {\r\n    const [formData, setFormData] = React.useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        joinedNewsletter: true\r\n    })\r\n    \r\n    /**\r\n     * Challenge: Connect the form to local state\r\n     * \r\n     * 1. Create a state object to store the 4 values we need to save.\r\n     * 2. Create a single handleChange function that can\r\n     *    manage the state of all the inputs and set it up\r\n     *    correctly\r\n     * 3. When the user clicks \"Sign up\", check if the \r\n     *    password & confirmation match each other. If\r\n     *    so, log \"Successfully signed up\" to the console.\r\n     *    If not, log \"passwords do not match\" to the console.\r\n     * 4. Also when submitting the form, if the person checked\r\n     *    the \"newsletter\" checkbox, log \"Thanks for signing\r\n     *    up for our newsletter!\" to the console.\r\n     */\r\n    \r\n    function handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            [name]: type === \"checkbox\" ? checked : value\r\n        }))\r\n    }\r\n    \r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if(formData.password === formData.passwordConfirm) {\r\n            alert(\"Successfully signed up\")\r\n        } else {\r\n            alert(\"Passwords do not match\")\r\n            return\r\n        }\r\n        \r\n        if(formData.joinedNewsletter) {\r\n            console.log(\"Thanks for signing up for our newsletter!\")\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"email\" \r\n                    placeholder=\"Email address\"\r\n                    className=\"form--input\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    value={formData.email}\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    className=\"form--input\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    value={formData.password}\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Confirm password\"\r\n                    className=\"form--input\"\r\n                    name=\"passwordConfirm\"\r\n                    onChange={handleChange}\r\n                    value={formData.passwordConfirm}\r\n                />\r\n                \r\n                <div className=\"form--marketing\">\r\n                    <input\r\n                        id=\"okayToEmail\"\r\n                        type=\"checkbox\"\r\n                        name=\"joinedNewsletter\"\r\n                        onChange={handleChange}\r\n                        checked={formData.joinedNewsletter}\r\n                    />\r\n                    <label htmlFor=\"okayToEmail\">I want to join the newsletter</label>\r\n                </div>\r\n                <button \r\n                    className=\"form--submit\"\r\n                >\r\n                    Sign up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}