{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AHSAN\\\\Documents\\\\webVS\\\\protfolio2\\\\my-app\\\\src\\\\components\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n  const [formData, setFormData] = React.useState({\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    joinedNewsletter: true\n  });\n\n  /**\r\n   * Challenge: Connect the form to local state\r\n   * \r\n   * 1. Create a state object to store the 4 values we need to save.\r\n   * 2. Create a single handleChange function that can\r\n   *    manage the state of all the inputs and set it up\r\n   *    correctly\r\n   * 3. When the user clicks \"Sign up\", check if the \r\n   *    password & confirmation match each other. If\r\n   *    so, log \"Successfully signed up\" to the console.\r\n   *    If not, log \"passwords do not match\" to the console.\r\n   * 4. Also when submitting the form, if the person checked\r\n   *    the \"newsletter\" checkbox, log \"Thanks for signing\r\n   *    up for our newsletter!\" to the console.\r\n   */\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (formData.password === formData.passwordConfirm) {\n      alert(\"Successfully signed up\");\n    } else {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    if (formData.joinedNewsletter) {\n      console.log(\"Thanks for signing up for our newsletter!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email address\",\n        className: \"form--input\",\n        name: \"email\",\n        onChange: handleChange,\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"form--input\",\n        name: \"password\",\n        onChange: handleChange,\n        value: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        className: \"form--input\",\n        name: \"passwordConfirm\",\n        onChange: handleChange,\n        value: formData.passwordConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form--marketing\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"okayToEmail\",\n          type: \"checkbox\",\n          name: \"joinedNewsletter\",\n          onChange: handleChange,\n          checked: formData.joinedNewsletter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"okayToEmail\",\n          children: \"I want to join the newsletter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--submit\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"PyVwLNUCi7O8JUUmmUTY317ypjA=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","useState","email","password","passwordConfirm","joinedNewsletter","handleChange","event","name","value","type","checked","target","prevFormData","handleSubmit","preventDefault","alert","console","log","className","children","onSubmit","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/AHSAN/Documents/webVS/protfolio2/my-app/src/components/Signup.jsx"],"sourcesContent":["import React from \"react\"\r\n\r\n export const Signup=()=> {\r\n    const [formData, setFormData] = React.useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        joinedNewsletter: true\r\n    })\r\n    \r\n    /**\r\n     * Challenge: Connect the form to local state\r\n     * \r\n     * 1. Create a state object to store the 4 values we need to save.\r\n     * 2. Create a single handleChange function that can\r\n     *    manage the state of all the inputs and set it up\r\n     *    correctly\r\n     * 3. When the user clicks \"Sign up\", check if the \r\n     *    password & confirmation match each other. If\r\n     *    so, log \"Successfully signed up\" to the console.\r\n     *    If not, log \"passwords do not match\" to the console.\r\n     * 4. Also when submitting the form, if the person checked\r\n     *    the \"newsletter\" checkbox, log \"Thanks for signing\r\n     *    up for our newsletter!\" to the console.\r\n     */\r\n    \r\n    function handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            [name]: type === \"checkbox\" ? checked : value\r\n        }))\r\n    }\r\n    \r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if(formData.password === formData.passwordConfirm) {\r\n            alert(\"Successfully signed up\")\r\n        } else {\r\n            alert(\"Passwords do not match\")\r\n            return\r\n        }\r\n        \r\n        if(formData.joinedNewsletter) {\r\n            console.log(\"Thanks for signing up for our newsletter!\")\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"email\" \r\n                    placeholder=\"Email address\"\r\n                    className=\"form--input\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    value={formData.email}\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    className=\"form--input\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    value={formData.password}\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Confirm password\"\r\n                    className=\"form--input\"\r\n                    name=\"passwordConfirm\"\r\n                    onChange={handleChange}\r\n                    value={formData.passwordConfirm}\r\n                />\r\n                \r\n                <div className=\"form--marketing\">\r\n                    <input\r\n                        id=\"okayToEmail\"\r\n                        type=\"checkbox\"\r\n                        name=\"joinedNewsletter\"\r\n                        onChange={handleChange}\r\n                        checked={formData.joinedNewsletter}\r\n                    />\r\n                    <label htmlFor=\"okayToEmail\">I want to join the newsletter</label>\r\n                </div>\r\n                <button \r\n                    className=\"form--submit\"\r\n                >\r\n                    Sign up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}